{"ast":null,"code":"var _jsxFileName = \"/home/moringa/Development/prework/Restuarant-App/client/src/components/LoginForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginForm = _ref => {\n  _s();\n  let {\n    onLogin\n  } = _ref;\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [errors, setErrors] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  function handleSubmit(e) {\n    e.preventDefault();\n    setIsLoading(true);\n    fetch(\"http://127.0.0.1:3000/login\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        username,\n        password\n      })\n    }).then(r => {\n      setIsLoading(false);\n      if (r.ok) {\n        r.json().then(user => onLogin(user));\n      } else {\n        r.json().then(err => setErrors(err.errors));\n      }\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"about\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"create\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"BOBO SAVOURS\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"username\",\n          children: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"username\",\n          required: true,\n          autoComplete: \"off\",\n          value: username,\n          onChange: e => setUsername(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          required: true,\n          autoComplete: \"current-password\",\n          value: password,\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          variant: \"fill\",\n          color: \"primary\",\n          type: \"submit\",\n          children: isLoading ? \"Loading...\" : \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 9\n        }, this), errors.map(err => /*#__PURE__*/_jsxDEV(\"error\", {\n          children: err\n        }, err, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginForm, \"0Ji54UNEhlpZjS5ukXWSjG/LLP8=\");\n_c = LoginForm;\nexport default LoginForm;\nvar _c;\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"names":["React","useState","LoginForm","onLogin","username","setUsername","password","setPassword","errors","setErrors","isLoading","setIsLoading","handleSubmit","e","preventDefault","fetch","method","headers","body","JSON","stringify","then","r","ok","json","user","err","target","value","map"],"sources":["/home/moringa/Development/prework/Restuarant-App/client/src/components/LoginForm.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nconst LoginForm = ({ onLogin }) => {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [errors, setErrors] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    setIsLoading(true);\n    fetch(\"http://127.0.0.1:3000/login\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ username, password }),\n    }).then((r) => {\n      setIsLoading(false);\n      if (r.ok) {\n        r.json().then((user) => onLogin(user));\n      } else {\n        r.json().then((err) => setErrors(err.errors));\n      }\n    });\n  }\n\n  return (\n    <div className=\"about\">\n    <div className=\"create\">\n       <h2>BOBO SAVOURS</h2>\n    <form onSubmit={handleSubmit}>\n     <label htmlFor=\"username\">Username</label>\n        <input\n          type=\"text\"\n          id=\"username\"\n          required\n          autoComplete=\"off\"\n          value={username}\n          onChange={(e) => setUsername(e.target.value)}\n        />\n\n        <label htmlFor=\"password\">Password</label>\n        <input\n          type=\"password\"\n          id=\"password\"\n          required\n          autoComplete=\"current-password\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n        />\n      \n        <button variant=\"fill\" color=\"primary\" type=\"submit\">\n          {isLoading ? \"Loading...\" : \"Login\"}\n        </button>\n  \n        {errors.map((err) => (\n          <error key={err}>{err}</error>\n        ))}\n    </form>\n    </div>\n    </div>\n  );\n}\n\nexport default LoginForm"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC;AAExC,MAAMC,SAAS,GAAG,QAAiB;EAAA;EAAA,IAAhB;IAAEC;EAAQ,CAAC;EAC5B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGJ,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACK,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACO,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACS,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAEjD,SAASW,YAAY,CAACC,CAAC,EAAE;IACvBA,CAAC,CAACC,cAAc,EAAE;IAClBH,YAAY,CAAC,IAAI,CAAC;IAClBI,KAAK,CAAC,6BAA6B,EAAE;MACnCC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEhB,QAAQ;QAAEE;MAAS,CAAC;IAC7C,CAAC,CAAC,CAACe,IAAI,CAAEC,CAAC,IAAK;MACbX,YAAY,CAAC,KAAK,CAAC;MACnB,IAAIW,CAAC,CAACC,EAAE,EAAE;QACRD,CAAC,CAACE,IAAI,EAAE,CAACH,IAAI,CAAEI,IAAI,IAAKtB,OAAO,CAACsB,IAAI,CAAC,CAAC;MACxC,CAAC,MAAM;QACLH,CAAC,CAACE,IAAI,EAAE,CAACH,IAAI,CAAEK,GAAG,IAAKjB,SAAS,CAACiB,GAAG,CAAClB,MAAM,CAAC,CAAC;MAC/C;IACF,CAAC,CAAC;EACJ;EAEA,oBACE;IAAK,SAAS,EAAC,OAAO;IAAA,uBACtB;MAAK,SAAS,EAAC,QAAQ;MAAA,wBACpB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAqB,eACxB;QAAM,QAAQ,EAAEI,YAAa;QAAA,wBAC5B;UAAO,OAAO,EAAC,UAAU;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAiB,eACvC;UACE,IAAI,EAAC,MAAM;UACX,EAAE,EAAC,UAAU;UACb,QAAQ;UACR,YAAY,EAAC,KAAK;UAClB,KAAK,EAAER,QAAS;UAChB,QAAQ,EAAGS,CAAC,IAAKR,WAAW,CAACQ,CAAC,CAACc,MAAM,CAACC,KAAK;QAAE;UAAA;UAAA;UAAA;QAAA,QAC7C,eAEF;UAAO,OAAO,EAAC,UAAU;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAiB,eAC1C;UACE,IAAI,EAAC,UAAU;UACf,EAAE,EAAC,UAAU;UACb,QAAQ;UACR,YAAY,EAAC,kBAAkB;UAC/B,KAAK,EAAEtB,QAAS;UAChB,QAAQ,EAAGO,CAAC,IAAKN,WAAW,CAACM,CAAC,CAACc,MAAM,CAACC,KAAK;QAAE;UAAA;UAAA;UAAA;QAAA,QAC7C,eAEF;UAAQ,OAAO,EAAC,MAAM;UAAC,KAAK,EAAC,SAAS;UAAC,IAAI,EAAC,QAAQ;UAAA,UACjDlB,SAAS,GAAG,YAAY,GAAG;QAAO;UAAA;UAAA;UAAA;QAAA,QAC5B,EAERF,MAAM,CAACqB,GAAG,CAAEH,GAAG,iBACd;UAAA,UAAkBA;QAAG,GAATA,GAAG;UAAA;UAAA;UAAA;QAAA,QAChB,CAAC;MAAA;QAAA;QAAA;QAAA;MAAA,QACC;IAAA;MAAA;MAAA;MAAA;IAAA;EACD;IAAA;IAAA;IAAA;EAAA,QACA;AAEV,CAAC;AAAA,GA7DKxB,SAAS;AAAA,KAATA,SAAS;AA+Df,eAAeA,SAAS;AAAA;AAAA"},"metadata":{},"sourceType":"module"}